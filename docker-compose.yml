
# This Docker Compose file should only be used for your development environment!
version: '3.7'

services:

  nginx:

  traefik:
    image: traefik:2.4
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik_dashboard_router.rule=Host(`traefik.$DOMAIN`)
      - traefik.http.routers.traefik_dashboard_router.service=traefik_dashboard_service
      - traefik.http.services.traefik_dashboard_service.loadbalancer.server.port=8080
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  api:
    image: ${BACK_IMAGE}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api_router.rule=${API_ROUTER_RULE}
    environment:
      # Docker image.
      # ---------------------
      APACHE_DOCUMENT_ROOT: "public/"
      # PHP_EXTENSION_BLACKFIRE: "1"
      PHP_EXTENSION_XDEBUG: "1"
      PHP_EXTENSION_REDIS: "1"
      PHP_EXTENSION_INTL: "1"
      PHP_EXTENSION_GD: "1"
      PHP_EXTENSION_APCU: "1"
      PHP_EXTENSION_ZIP: "1"
      #PHP_EXTENSION_OCI8: "1"
      PHP_INI_MEMORY_LIMIT: "2G"
      PHP_INI_XDEBUG__MODE: "${XDEBUG_MODE:-debug}"
      STARTUP_COMMAND_1: "touch .env" # Create a fake .env file so that Symfony does not complain on startup.
      STARTUP_COMMAND_2: "composer install"

      # Symfony.
      # ---------------------
      APP_NAME: "$APP_NAME"
      APP_ENV: "${APP_ENV:-dev}"
      APP_DEBUG: "1"
      APP_SECRET: "$APP_SECRET"
      ALLOW_FIXTURES: "1"
      ALLOW_RESET: "1"

      # CORS.
      CORS_ALLOW_ORIGIN: "http://$DOMAIN" # Never use "*": https://stackoverflow.com/questions/52060784/graphql-and-csrf-protection.
      # Logging.
      MONOLOG_LOGGING_PATH: "php://stderr"
      # Databases.
      DATABASE_URL: "mysql://$MYSQL_USER:$MYSQL_PASSWORD@mysql:3306/$MYSQL_DATABASE?server_version=8.0"
      DATABASE_HUB_URL: "mysql://$MYSQL_READONLY_USER:$MYSQL_READONLY_PASSWORD@mysql_hub:3306/$MYSQL_HUB_DATABASE?server_version=8.0"
      TESTS_DATABASE_URL: "mysql://$MYSQL_USER:$MYSQL_PASSWORD@mysql_tests:3306/$MYSQL_TESTS_DATABASE?server_version=8.0"
      # Messenger.
      MESSENGER_TRANSPORT_DSN: "redis://$REDIS_PASSWORD@redis:6379/messages"
      # Storage.
      # Note: in other environments, the following values/variables might differ according
      # to your storage sources (see src/api/config/packages/flysystem.yaml).
      STORAGE_PRIVATE_SOURCE: "private.storage.s3"
      STORAGE_ENDPOINT: "http://minio:9000"
      STORAGE_PRIVATE_BUCKET: "$STORAGE_PRIVATE_BUCKET"
      STORAGE_ACCESS_KEY: "$STORAGE_ACCESS_KEY"
      STORAGE_SECRET_KEY: "$STORAGE_SECRET_KEY"
      # Mailer.
      MAILER_DSN: "$MAILER_DSN"
      MAIL_FROM_ADDRESS: "$MAIL_FROM_ADDRESS"
      MAIL_FROM_NAME: "$APP_NAME"
      MAIL_TITLE: "$MAIL_TITLE"
      # Urls
      API_URL: "http://$API_SUBDOMAIN.$DOMAIN/"
      WEBAPP_URL: "http://$DOMAIN/"
      HUB_URL: "http://$HUB_SUBDOMAIN.$DOMAIN/"
      #ENV
      ENV_NAME: "$ENV_NAME"
      #LOCK
      LOCK_DSN: "redis://$REDIS_PASSWORD@redis:6379/api"
      #CACHE
      REDIS_DSN: "redis://$REDIS_PASSWORD@redis:6379/api"
    volumes:
      - ./src/api:/var/www/html
      - ./lib/common:/var/www/lib/common
      - ./scripts/hub-dump-no-fixtures-for-api-tests.sql:/var/www/scripts/hub-dump-no-fixtures-for-api-tests.sql
    networks:
      default:
        aliases:
          # Required so that the web application is able to call the same endpoint
          # from both the browser and the server.
          - "$API_SUBDOMAIN.$DOMAIN"

  #database
  postgres:
    image: postgres:11-alpine3.17
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - PGDATA:/var/lib/postgresql/data

 #database manager
  adminer:
    image: adminer
    environment:
      APP_ENV: dev
      ADMINER_DESIGN: pepa-linha
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - 8888:8080


  # For sessions, asynchronous tasks and emails on the API side.
  redis:
    image: redis:5.0.14
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    environment:
      REDIS_PASSWORD: "$REDIS_PASSWORD"
    tmpfs:
      - /bitnami/redis/data

  # For catching and displaying emails.
  mailcatcher:
    image: dockage/mailcatcher
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog_router.rule=Host(`mailhog.$DOMAIN`)
      - traefik.http.routers.mailhog_router.service=mailhog_service
      - traefik.http.services.mailhog_service.loadbalancer.server.port=8025
    ports:
      - "1025:1025"
      - "1080:1080"


volumes:
  PGDATA:

networks:
  default:
    name: x-symfony-boilerplate-newtork


